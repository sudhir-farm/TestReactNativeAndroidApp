# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end
end

platform :android do
  # Android Lanes
  desc 'Build and Upload the Android application.'

  # Lane to build Android debug apk
  lane :build do
    # Clean up the Android (apk/aab) files if already generated.
    gradle(task: 'clean', project_dir: 'android/')

    # Build Android debug apk
    gradle(
      task: 'assemble', 
      build_type: 'Debug', 
      print_command: true, 
      project_dir: 'android/')
  end

  # Lane to upload Android debug apk
  lane :beta do
    increment_version_code #[Optional] fastlane add_plugin increment_version_code
    
    # gradle(task: "clean assembleDebug", project_dir: 'android/') #or clean assembleRelease
    
    # upload Android debug apk only to testapp.io
    # App - Upload_Test_CI
    upload_to_testappio(
      api_token: "167fbb38-2594-449a-b952-b26bc3485588",
      app_id: "ROYJVeVYxZ",
      release: "android",
      apk_file: "./android/app/build/outputs/apk/debug/app-debug.apk",
      release_notes: "Manual release notes for Android",
      git_release_notes: false,
      git_commit_id: false,
      notify: true)
    
  end

  lane :build_aab do
      # gradle(task: 'clean', project_dir: 'android/')
      gradle(
        task: 'bundle',
        project_dir: 'android/',
        build_type: 'Release',
        print_command: true,
        properties: {
          "android.injected.signing.store.file" => "my-upload-key.keystore",
          "android.injected.signing.store.password" => "my-upload-key",
          "android.injected.signing.key.alias" => "my-key-alias",
          "android.injected.signing.key.password" => "my-upload-key" })
      # upload_to_play_store(
      #     track:'production',
      #     skip_upload_metadata: true,
      #     skip_upload_images: true,
      #     skip_upload_screenshots: true)
  end
end
